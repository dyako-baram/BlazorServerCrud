@page "/person"
@using BlazorServerUi.Models
@inject BlazorServerUi.Data.IPersonCrud pc
<h3>Person</h3>

<h4>Insert person</h4>
<EditForm Model="SinglePerson" OnValidSubmit="ValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary/>
    <InputText id="FullName" @bind-Value="SinglePerson.FullName"/>
    <InputText  id="Email" @bind-Value="SinglePerson.Email"/>
    <InputText  id="Gender" @bind-Value="SinglePerson.Gender"/>
    <InputDate id="DOB" @bind-Value="SinglePerson.DOB"/>

    <button type="submit" class="btn btn-outline-primary">Submit</button>
</EditForm>
<hr />
<Update SinglePerson1="personUpdate"/>

@if (person == null)
{
    <p><em>Loading...</em></p>
}
else
    {
<table class="table">
    <thead>
        <tr >
            <th>Full Name</th>
            <th>Email</th>
            <th>Date Of Birth</th>
            <th>Gender</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var p in person)
        {
            <tr @onclick="()=>Data(p)">
                <td>@p.FullName</td>
                <td>@p.Email</td>
                <td>@p.DOB</td>
                <td>@p.Gender</td>
                <td><button class="btn btn-outline-danger" @onclick="()=>Delete(p.Id)">Remove</button></td>
            </tr>
        }
    </tbody>
</table>
}
@code {
    private List<PersonModel> person;
    public PersonModel SinglePerson = new PersonModel();
    private PersonModel personUpdate =new PersonModel();

    public void Data(PersonModel pm)
    {
        personUpdate.Id= pm.Id;
        personUpdate.FullName = pm.FullName;
        personUpdate.Email= pm.Email;
        personUpdate.DOB= pm.DOB;
        personUpdate.Gender= pm.Gender;
    }

    protected override async  Task OnInitializedAsync()
    {
        person = await pc.LoadPeople();
    }
    public async Task ValidSubmit()
    {
        await pc.InsertPerson(SinglePerson);
        person = await pc.LoadPeople();
        SinglePerson = new PersonModel();
    }
    public async Task Delete(Guid guid)
    {
        await pc.DeletePerson(guid);
        person = await pc.LoadPeople();
    }

}
